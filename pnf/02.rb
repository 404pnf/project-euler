=begin
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=end

# stolen form  http://www.ruby-doc.org/core-2.0/Enumerator.html#method-c-new
FIB = Enumerator.new do |y|
  a = b = 1
  loop do
    y << a
    a, b = b, a + b
  end
end

def even_fib_sum
  FIB.take_while { |i| i < 4_000_000 }
  .select { |i| i.even? }
  .reduce(:+)
end

require 'test/unit'
# testing
class TestMyLast < Test::Unit::TestCase
  def test_even_fib_sum
    assert_equal 4_613_732, even_fib_sum
  end
end